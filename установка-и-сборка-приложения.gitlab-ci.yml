# сборка-и-установка-приложения
variables:
  REGISTRY_URL: "https://mynexus.com/v1/"
  IMAGE_NAME: "timebase"
  FULL_IMAGE_NAME: "$IMAGE_NAME:$CI_COMMIT_TAG"

stages:
  - lint
  - build
  - scan
#  - test
  - deploy
#  - loadtest

pylint:
  stage: lint
  tags:
    - k8s-runner-amd64
  image: registry.gitlab.com/pipeline-components/pylint:latest
  script:
    - pylint **/*.py

docker-build:
  stage: build
  tags:
    - k8s-runner-amd64
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"${REGISTRY_URL}\":{\"auth\":\"${REGISTRY_AUTH}\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --cache=true
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${IMAGE_NAME}:${CI_COMMIT_TAG}"
  # запускать данный шаг только когда создаетс тег
  only:
    - tags
  # не запускать когда создается branch
  except:
    - branches

trivy-scan:
  stage: scan
  tags:
    - k8s-runner-amd64
  image:
    name: docker.io/aquasec/trivy:latest
    entrypoint: [""]
  variables:
    GIT_STRATEGY: none
  script:
    - time trivy --download-db-only --no-progress --cache-dir .trivycache/
    - time trivy --cache-dir .trivycache/ image --exit-code 0 --no-progress --format template --template "@/contrib/gitlab.tpl"
        --output "$CI_PROJECT_DIR/gl-container-scanning-report.json" "$FULL_IMAGE_NAME"
  cache:
    paths:
      - .trivycache/
  artifacts:
    when: always
    reports:
      container_scanning: gl-container-scanning-report.json
  # запускать данный шаг только когда создаетс тег
  only:
    - tags
  # не запускать когда создается branch
  except:
    - branches

# нужно создать переменную 'KUBECONFIG' в которой прописать путь к конфигу .kube/config
helm-deploy:
  stage: deploy
  tags:
    - k8s-runner-amd64
  image:
    name: alpine/helm:latest
  script:
    - helm repo add deltx https://mynexus.com/helm-charts
    - helm repo update
    - helm upgrade --install timebase deltx/default-chart:1.0.1 --atomic --create-namespace --namespace=timebase --set statefulSets.enabled=true --set image.repository=$IMAGE_NAME --set image.tag=$CI_COMMIT_TAG
#    - helm upgrade --install trader deltx/default-chart:1.0.1 --atomic --create-namespace --namespace=trader --set image.repository=$IMAGE_NAME --set image.tag=$CI_COMMIT_TAG
#    - helm upgrade --install web-ui deltx/default-chart:1.0.1 --atomic --create-namespace --namespace=web-ui --set ingress.enabled=true --set ingress.hosts[1].host=web-ui.com --set image.repository=$IMAGE_NAME --set image.tag=$CI_COMMIT_TAG
#    - helm upgrade --install web-static deltx/default-chart:1.0.1 --atomic --create-namespace --namespace=web-static --set ingress.enabled=true --set ingress.hosts[1].host=web-static.com --set image.repository=$IMAGE_NAME --set image.tag=$CI_COMMIT_TAG
  # запускать данный шаг только когда создаетс тег
  only:
    - tags
  # не запускать когда создается branch
  except:
    - branches
